import { describe, expect, it } from 'vitest'
import { SortedQueue } from './SortedQueue'

describe('SortedQueue', () => {
  it('stores elements in the correct order', () => {
    const queue = new SortedQueue<number>((el) => el)
    expect(f(queue.elements)).toMatchInlineSnapshot('""')
    queue.enqueue(1)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1"')
    queue.enqueue(2)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2"')
    queue.enqueue(4)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2, 4"')
    queue.enqueue(3)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2, 3, 4"')
    queue.enqueue(-1)
    expect(f(queue.elements)).toMatchInlineSnapshot('"-1, 1, 2, 3, 4"')
    queue.enqueue(3)
    expect(f(queue.elements)).toMatchInlineSnapshot('"-1, 1, 2, 3, 3, 4"')
    queue.enqueue(10)
    expect(f(queue.elements)).toMatchInlineSnapshot('"-1, 1, 2, 3, 3, 4, 10"')
    expect(queue.removeMinimum()).toMatchInlineSnapshot('-1')
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2, 3, 3, 4, 10"')
    expect(queue.removeMinimum()).toMatchInlineSnapshot('1')
    expect(f(queue.elements)).toMatchInlineSnapshot('"2, 3, 3, 4, 10"')
    queue.enqueue(1)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2, 3, 3, 4, 10"')
    expect(f(queue.removeAllSortedByMinimumFirst())).toMatchInlineSnapshot('"1, 2, 3, 3, 4, 10"')
    expect(queue.removeMinimum()).toMatchInlineSnapshot('undefined')
    expect(f(queue.elements)).toMatchInlineSnapshot('""')
    queue.enqueue(2)
    expect(f(queue.elements)).toMatchInlineSnapshot('"2"')
    queue.enqueue(1)
    expect(f(queue.elements)).toMatchInlineSnapshot('"1, 2"')
  })

  it('stores the correct length', () => {
    const queue = new SortedQueue<number>((el) => el)
    expect(queue.length).toMatchInlineSnapshot('0')
    queue.enqueue(1)
    expect(queue.length).toMatchInlineSnapshot('1')
    queue.enqueue(1)
    expect(queue.length).toMatchInlineSnapshot('2')
    queue.enqueue(1)
    expect(queue.length).toMatchInlineSnapshot('3')
    queue.removeMinimum()
    expect(queue.length).toMatchInlineSnapshot('2')
    queue.removeMinimum()
    expect(queue.length).toMatchInlineSnapshot('1')
    queue.enqueue(1)
    expect(queue.length).toMatchInlineSnapshot('2')
    queue.removeAllSortedByMinimumFirst()
    queue.enqueue(1)
    expect(queue.length).toMatchInlineSnapshot('1')
  })
})

function f<T>(array: T[]): string {
  return array.join(', ')
}
